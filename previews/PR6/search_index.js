var documenterSearchIndex = {"docs":
[{"location":"#BuildkiteUtils.jl","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.jl","text":"","category":"section"},{"location":"","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.jl","text":"BuildkiteUtils is a collection of utility functions when running jobs on Buildkite.","category":"page"},{"location":"#Build-meta-data","page":"BuildkiteUtils.jl","title":"Build meta-data","text":"","category":"section"},{"location":"","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.jl","text":"BuildkiteUtils.METADATA","category":"page"},{"location":"#BuildkiteUtils.METADATA","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.METADATA","text":"BuildkiteUtils.METADATA\n\nA dict-like object for setting and getting build meta-data\n\nx = BuildkiteUtils.METADATA[key]   # get meta-data\nBuildkiteUtils.METADATA[key] = val # set meta-data\nkeys(BuildkiteUtils.METADATA)      # list of meta-data keys\nhaskey(BuildkiteUtils.METADATA)    # check if key exists\n\n\n\n\n\n","category":"constant"},{"location":"#Artifacts","page":"BuildkiteUtils.jl","title":"Artifacts","text":"","category":"section"},{"location":"","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.jl","text":"BuildkiteUtils.artifact_upload\nBuildkiteUtils.artifact_download\nBuildkiteUtils.artifact_search","category":"page"},{"location":"#BuildkiteUtils.artifact_upload","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.artifact_upload","text":"BuildkiteUtils.artifact_upload(pattern::AbstractString)\n\nUpload all artifacts in the current directory matching pattern.\n\nSee Uploading artifacts.\n\n\n\n\n\n","category":"function"},{"location":"#BuildkiteUtils.artifact_download","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.artifact_download","text":"BuildkiteUtils.artifact_download(pattern::AbstractString, destination::AbstractString=\".\";\n   [step,] [build])\n\nDownload all artifacts matching pattern to destination.\n\nOptional keyword arguments\n\nstep will limit to artifacts in a given step (either the key or the step\n\nID),\n\nbuild allows downloading artifact from a given build ID.\n\n\n\n\n\n","category":"function"},{"location":"#BuildkiteUtils.artifact_search","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.artifact_search","text":"BuildkiteUtils.artifact_search(pattern::AbstractString; [step,] [build])\n\nList all uploaded artifacts matching pattern.\n\nOptional keyword arguments\n\nstep will limit to artifacts in a given step (either the key or the step\n\nID),\n\nbuild allows downloading artifact from a given build ID.\n\n\n\n\n\n","category":"function"},{"location":"#Annotations","page":"BuildkiteUtils.jl","title":"Annotations","text":"","category":"section"},{"location":"","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.jl","text":"BuildkiteUtils.annotate","category":"page"},{"location":"#BuildkiteUtils.annotate","page":"BuildkiteUtils.jl","title":"BuildkiteUtils.annotate","text":"BuildkiteUtils.annotate(data; context=nothing, style=nothing, append=false)\n\nAnnotates the current build with data: this is a Markdown-formatted string.\n\ncontext: a unique identifier for a given annotation. The default will use the default context.\nstyle: one of\nnothing (default style)\n\"success\"\n\"info\"\n\"warning\"\n\"error\"\nappend: if true, will add to the existing annotation with the same context, otherwise will replace it.\n\nSee buildkite-agent annotate for more information.\n\n\n\n\n\n","category":"function"}]
}
